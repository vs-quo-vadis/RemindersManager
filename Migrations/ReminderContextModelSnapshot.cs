// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RemindersManager.DAL;

namespace RemindersManager.Migrations
{
    [DbContext(typeof(ReminderContext))]
    partial class ReminderContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.0-rtm-30799")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RemindersManager.Models.Author", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(80);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80);

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new { Id = new Guid("7e5ed0cc-4b68-411d-9a65-07b17bded6fe"), Email = "franz.kafka@gmail.com", Name = "Franz Kafka" }
                    );
                });

            modelBuilder.Entity("RemindersManager.Models.Reminder", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("AuthorId");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsCancelled");

                    b.Property<string>("Notes")
                        .HasMaxLength(500);

                    b.Property<DateTime>("RemindDate");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(80);

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Reminders");

                    b.HasData(
                        new { Id = new Guid("98adeabd-ed7a-4a39-a14d-a1e4c8bed9a8"), AuthorId = new Guid("7e5ed0cc-4b68-411d-9a65-07b17bded6fe"), IsActive = true, IsCancelled = false, Notes = "Write clean code!", RemindDate = new DateTime(2019, 1, 18, 6, 0, 0, 0, DateTimeKind.Unspecified), Subject = "Finish interview task" }
                    );
                });

            modelBuilder.Entity("RemindersManager.Models.Reminder", b =>
                {
                    b.HasOne("RemindersManager.Models.Author", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
